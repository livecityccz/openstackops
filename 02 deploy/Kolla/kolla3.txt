2018@CloudMind#CN




echo "nameserver 202.106.0.20" > /etc/resolv.conf
echo "nameserver 144.114.114.114" >> /etc/resolv.conf
echo "nameserver 8.8.4.4" >> /etc/resolv.conf



systemctl disable NetworkManager
systemctl stop NetworkManager

systemctl stop firewalld
systemctl disable firewalld

sed -i '/^SELINUX=.*/c SELINUX=disabled' /etc/selinux/config
sed -i 's/^SELINUXTYPE=.*/SELINUXTYPE=disabled/g' /etc/selinux/config

grep --color=auto '^SELINUX' /etc/selinux/config
setenforce 0

echo "10.1.1.181    kolla" >> /etc/hosts



yum install -y epel-release

yum install -y vim wget screen curl telnet python-pip

yum install -y python-devel libffi-devel gcc openssl-devel libselinux-python



pip install -U pip



yum install ansible -y

pip install -U ansible

vi /etc/ansible/ansible.cfg

[defaults]
host_key_checking=False
pipelining=True
forks=100



rpm -qa|grep docker

rpm -qa|grep ansible
ansible-2.5.0-2.el7.noarch




pip install kolla-ansible

cp -r /usr/share/kolla-ansible/etc_examples/kolla /etc/

cp /usr/share/kolla-ansible/ansible/inventory/* .



yum install -y git

git clone https://github.com/openstack/kolla
git clone https://github.com/openstack/kolla-ansible


pip install -r kolla/requirements.txt

报错1

requests 2.18.4 has requirement idna<2.7,>=2.5, but you'll have idna 2.4 which is incompatible.
Installing collected packages: smmap2, gitdb2, GitPython, PyYAML
  Found existing installation: PyYAML 3.10
Cannot uninstall 'PyYAML'. It is a distutils installed project and thus we cannot accurately determine which files belong to it which would lead to only a partial uninstall.


yum list installed |grep -i pyyaml

yum remove PyYAML -y

报错2

requests 2.18.4 has requirement idna<2.7,>=2.5, but you'll have idna 2.4 which is incompatible.

pip install -U idna



pip install -r kolla-ansible/requirements.txt




cp -r kolla-ansible/etc/kolla /etc/kolla


cp kolla-ansible/ansible/inventory/* . 



multinode

egrep -v "^#|^$" multinode 
[control]
controller
[network]
controller
[inner-compute]
[external-compute]
compute1
compute2
[compute:children]
inner-compute
external-compute
[monitoring]
controller
[storage]
compute1
[deployment]
localhost       ansible_connection=local
[baremetal:children]
control
network
compute
storage
monitoring
[chrony-server:children]
haproxy
[chrony:children]
control
network
compute
storage
monitoring
......


ansible -i multinode all -m ping

kolla-genpwd


egrep -v "^#|^$" /etc/kolla/globals.yml 
---
kolla_base_distro: "centos"
kolla_install_type: "source"
openstack_release: "queens"
kolla_internal_vip_address: "10.1.1.181"
network_interface: "eth0"
neutron_external_interface: "eth1"
enable_cinder: "no"
enable_haproxy: "no"
tempest_image_id:
tempest_flavor_ref_id:
tempest_public_network_id:
tempest_floating_network_name:





kolla-ansible -i ./multinode bootstrap-servers


kolla-ansible -i ./multinode prechecks







kolla-ansible -i ./multinode destroy --yes-i-really-really-mean-it

# 可用于从系统中移除部署的容器:
tools/cleanup-containers
# 可用于移除由于网络变化引发的 Docker 启动的neutron-agents 主机：
tools/cleanup-host
# 可用于从本地缓存中移除所有的 Docker image
tools/cleanup-images














yum remove docker docker-client docker-client-latest docker-common docker-latest docker-latest-logrotate docker-logrotate docker-selinux docker-engine-selinux docker-engine

yum install -y yum-utils device-mapper-persistent-data lvm2

yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo

yum install docker-ce -y

systemctl start docker






wget -O /etc/yum.repos.d/docker-ce.repo https://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo

yum install -y docker-ce



mkdir /etc/systemd/system/docker.service.d

tee /etc/systemd/system/docker.service.d/kolla.conf << 'EOF'
[Service]
MountFlags=shared
EOF

vim /usr/lib/systemd/system/docker.service
# ExecStart=/usr/bin/dockerd
ExecStart=/usr/bin/dockerd --registry-mirror=http://f2d6cb40.m.daocloud.io --storage-driver=overlay2

systemctl daemon-reload

systemctl restart docker

systemctl enable docker

systemctl status docker

docker info



yum -y install ansible









   91  for i in 3 2 1;do ssh 10.1.1.18$i "yum install -y epel-release";done

  109  ll /usr/share/kolla-ansible/etc_examples/kolla/
  110  cp -r /usr/share/kolla-ansible/etc_examples/kolla /etc/
  111  ll
  112  cp /usr/share/kolla-ansible/ansible/inventory/* .
  113  ll
  114  vim multinode 
  115  ll /etc/kolla/
  116  vim /etc/kolla/globals.yml 
  117  ll
  118  ansible -i multinode all -m ping
  119  vim /etc/kolla/globals.yml 
  120  find / -name start-registry
  121  find / -name kolla
  122  ll /usr/share/kolla-ansible/etc_examples/kolla
  123  ll /usr/share/kolla-ansible/etc_examples
  124  ll /usr/share/kolla-ansible
  125  ll /usr/share/kolla-ansible/tools/
  126  git clone https://github.com/openstack/kolla
  127  yum install -y git
  128  git clone https://github.com/openstack/kolla
  129  ll
  130  ll kolla/
  131  ll kolla/tools/
  132  git clone https://github.com/openstack/kolla-ansible
  133  11
  134  screen -S k
  135  ll
  136  pip install -r kolla/requirements.txt
  137  pip install -U PyYAML
  138  yum list | grep yaml
  139  pip  install pyyaml
  140  pip install -U pyyaml
  141  pip -U pyyaml
  142  pip install -U idna
  143  pip install - idna
  144  pip install -U idna
  145  pip remove pyyaml
  146  pip -h
  147  pip uninstall pyyaml
  148  python
  149  pip install -U ansible
  150  yum list installed |grep pyyaml
  151  yum list installed |grep -i pyyaml
  152  yum remove PyPAML
  153  yum remove PyYAML
  154  pip install -r kolla/requirements.txt
  155  pip install -r kolla-ansible/requirements.txt
  156  l
  157  pip install -r kolla-ansible/requirements.txt
  158  cd kolla
  159  ll
  160  tools/start-registry
  161  yum remove docker                   docker-client                   docker-client-latest                   docker-common                   docker-latest                   docker-latest-logrotate                   docker-logrotate                   docker-selinux                   docker-engine-selinux                   docker-engine
  162  yum remove docker  docker-client docker-client-latest docker-common docker-latest docker-latest-logrotate docker-logrotate docker-selinux docker-engine-selinux docker-engine
  163  yum install -y yum-utils   device-mapper-persistent-data   lvm2
  164  yum-config-manager     --add-repo     https://download.docker.com/linux/centos/docker-ce.repo
  165  yum-config-manager --enable docker-ce-edge
  166  yum-config-manager --enable docker-ce-test
  167  yum install docker-ce -y
  168  systemctl start docker
  169  tools/start-registry
  170  vim /etc/kolla/globals.yml 
  171  ll /etc/systemd/system/docker.service.d/
  172  tools/start-registry
  173  export REGISTRY_PROXY_REMOTEURL=https://registry-1.docker.io


















git clone https://github.com/openstack/kolla-ansible -b stable/queens

cd kolla-ansible/

cp -r etc/kolla/ /etc/kolla/

pip install . -i https://pypi.tuna.tsinghua.edu.cn/simple




egrep "^[^#]" /etc/kolla/globals.yml
---
kolla_base_distro: "centos"
kolla_install_type: "source"
openstack_release: "queens"
kolla_internal_vip_address: "192.168.254.11"
docker_namespace: "kolla"
network_interface: "ens33"
neutron_external_interface: "ens34"
enable_haproxy: "no"
nova_compute_virt_type: "qemu"
ironic_dnsmasq_dhcp_range:
tempest_image_id:
tempest_flavor_ref_id:
tempest_public_network_id:
tempest_floating_network_name:





kolla-genpwd

编辑 /etc/kolla/passwords.yml 文件，配置 keystone 管理员用户的密码。

keystone_admin_password: password


kolla-ansible prechecks

kolla-ansible pull

大约1小时



kolla-ansible deploy


kolla-ansible post-deploy


pip install python-openstackclient



编辑init-runonce文件,设置public network

# vim /usr/share/kolla-ansible/init-runonce

EXT_NET_CIDR='175.25.181.128/25'
EXT_NET_RANGE='start=175.25.181.188,end=175.25.181.199'
EXT_NET_GATEWAY='175.25.181.129'



source /etc/kolla/admin-openrc.sh

cd /usr/share/kolla-ansible/ && ./init-runonce























curl -sSL https://get.docker.io | bash //注:这条命令安装的是最新版的docker，会默认下载docker源
# 或者选择yum安装方式:
tee /etc/yum.repos.d/docker.repo << 'EOF'
[dockerrepo]
name=Docker Repository
baseurl=https://yum.dockerproject.org/repo/main/centos/$releasever/
enabled=1
gpgcheck=1
gpgkey=https://yum.dockerproject.org/gpg
EOF
yum install -y docker-engine
mkdir -p /etc/systemd/system/docker.service.d
tee /etc/systemd/system/docker.service.d/kolla.conf <<-'EOF'
[Service]
MountFlags=shared
#EnvironmentFile=/etc/sysconfig/docker
ExecStart=
ExecStart=/usr/bin/dockerd --insecure-registry 0.0.0.0/0
EOF
systemctl daemon-reload
systemctl restart docker
systemctl enable docker.service










tee /etc/yum.repos.d/docker.repo << 'EOF'
[dockerrepo]
name=Docker Repository
baseurl=https://yum.dockerproject.org/repo/main/centos/$releasever/
enabled=1
gpgcheck=1
gpgkey=https://yum.dockerproject.org/gpg
EOF


yum install docker-engine-1.12.5 docker-engine-selinux-1.12.5 -y






yum install epel-release -y
yum install python-pip -y
pip install -U pip


yum install python-devel libffi-devel gcc openssl-devel libselinux-python -y

yum install ansible -y


/etc/ansible/ansible.cfg:

[defaults]
host_key_checking=False
pipelining=True
forks=100




tee /etc/yum.repos.d/docker.repo << 'EOF'
[dockerrepo]
name=Docker Repository
baseurl=https://yum.dockerproject.org/repo/main/centos/$releasever/
enabled=1
gpgcheck=1
gpgkey=https://yum.dockerproject.org/gpg
EOF







enable_cinder: "no"
enable_haproxy: "no"






[dockerrepo]
name=Docker Repository
baseurl=https://yum.dockerproject.org/repo/main/centos/$releasever/
enabled=1
gpgcheck=1
gpgkey=https://yum.dockerproject.org/gpg
EOF




vi /etc/sysconfig/docker

INSECURE_REGISTRY="--insecure-registry 192.168.122.21:5000"



kolla-ansible -i /root/all-in-one bootstrap-servers

kolla-ansible -i /root/all-in-one prechecks

kolla-ansible -i /root/all-in-one deploy



kolla-ansible destroy -i /root/all-in-one --yes-i-really-really-mean-it



kolla-ansible deploy -i /root/all-in-one --yes-i-really-really-mean-it







yum install -y tree net-tools bind-utils tree sysstat vim-en* \
lrzsz NetworkManager-tui ntp ntpdate iftop tcpdump telnet traceroute python-devel \
libffi-devel gcc openssl-devel git python-setuptools







Network timed out while trying to connect to  kolla centos-binary-openvswitch-vswitchd 

















