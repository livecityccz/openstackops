




mysql -u root -pMYSQL_ROOT_PASS_TENDCLOUD
CREATE DATABASE keystone;
GRANT ALL PRIVILEGES ON keystone.* TO 'keystone'@'localhost' \
IDENTIFIED BY 'KEYSTONE_DBPASS_TENDCLOUD';
GRANT ALL PRIVILEGES ON keystone.* TO 'keystone'@'%' \
IDENTIFIED BY 'KEYSTONE_DBPASS_TENDCLOUD';
exit

yum install -y openstack-keystone httpd mod_wsgi

sed -i '/#admin_token = /a\
admin_token = ADMIN_TOKEN_TENDCLOUD' \
/etc/keystone/keystone.conf

sed -i '/#connection = /a\
connection = mysql+pymysql://keystone:KEYSTONE_DBPASS_TENDCLOUD@controller/keystone' \
/etc/keystone/keystone.conf



sed -i '/#provider/a\
### 20160527 Duoyi\
provider = fernet' /etc/keystone/keystone.conf

su -s /bin/sh -c "keystone-manage db_sync" keystone

keystone-manage fernet_setup --keystone-user keystone --keystone-group keystone


sed -i '/#ServerName www.example.com:80/a\
### 20160527 Duoyi\
ServerName controller' /etc/httpd/conf/httpd.conf


cat >> /etc/httpd/conf.d/wsgi-keystone.conf <<eof
Listen 5000
Listen 35357

<VirtualHost *:5000>
    WSGIDaemonProcess keystone-public processes=5 threads=1 user=keystone group=keystone display-name=%{GROUP}
    WSGIProcessGroup keystone-public
    WSGIScriptAlias / /usr/bin/keystone-wsgi-public
    WSGIApplicationGroup %{GLOBAL}
    WSGIPassAuthorization On
    ErrorLogFormat "%{cu}t %M"
    ErrorLog /var/log/httpd/keystone-error.log
    CustomLog /var/log/httpd/keystone-access.log combined

    <Directory /usr/bin>
        Require all granted
    </Directory>
</VirtualHost>

<VirtualHost *:35357>
    WSGIDaemonProcess keystone-admin processes=5 threads=1 user=keystone group=keystone display-name=%{GROUP}
    WSGIProcessGroup keystone-admin
    WSGIScriptAlias / /usr/bin/keystone-wsgi-admin
    WSGIApplicationGroup %{GLOBAL}
    WSGIPassAuthorization On
    ErrorLogFormat "%{cu}t %M"
    ErrorLog /var/log/httpd/keystone-error.log
    CustomLog /var/log/httpd/keystone-access.log combined

    <Directory /usr/bin>
        Require all granted
    </Directory>
</VirtualHost>
eof


systemctl enable httpd.service
systemctl start httpd.service




export OS_TOKEN=ADMIN_TOKEN_TENDCLOUD
export OS_URL=http://controller:35357/v3
export OS_IDENTITY_API_VERSION=3



openstack service create \
--name keystone --description "OpenStack Identity" identity


openstack endpoint create --region RegionOne \
identity public http://controller:5000/v3

openstack endpoint create --region RegionOne \
identity internal http://controller:5000/v3

openstack endpoint create --region RegionOne \
identity admin http://controller:35357/v3


openstack domain create --description "Default Domain" default

openstack project create --domain default \
--description "Admin Project" admin

openstack user create --domain default \
--password-prompt admin
ADMIN_PASS_TENDCLOUD

openstack role create admin

openstack role add --project admin --user admin admin




openstack project create --domain default \
--description "Service Project" service

openstack project create --domain default \
--description "Demo Project" demo

openstack user create --domain default \
--password-prompt demo

DEMO_PASS_TENDCLOUD


openstack role create user

openstack role add --project demo --user demo user


Edit the /etc/keystone/keystone-paste.ini file 
and remove admin_token_auth 
from the [pipeline:public_api], [pipeline:admin_api], and [pipeline:api_v3] sections.

unset OS_TOKEN OS_URL

openstack --os-auth-url http://controller:35357/v3 \
--os-project-domain-name default --os-user-domain-name default \
--os-project-name admin --os-username admin token issue
ADMIN_PASS_TENDCLOUD

openstack --os-auth-url http://controller:5000/v3 \
--os-project-domain-name default --os-user-domain-name default \
--os-project-name demo --os-username demo token issue
DEMO_PASS_TENDCLOUD



mkdir -p /etc/tenant/

cat > /etc/tenant/admin-openrc.sh <<eof
export OS_PROJECT_DOMAIN_NAME=default
export OS_USER_DOMAIN_NAME=default
export OS_PROJECT_NAME=admin
export OS_USERNAME=admin
export OS_PASSWORD=ADMIN_PASS_TENDCLOUD
export OS_AUTH_URL=http://controller:35357/v3
export OS_IDENTITY_API_VERSION=3
export OS_IMAGE_API_VERSION=2
eof

echo "source /etc/tenant/admin-openrc.sh" >> /etc/profile

source /etc/tenant/admin-openrc.sh

openstack token issue



cat > /etc/tenant/demo-openrc.sh <<eof
export OS_PROJECT_DOMAIN_NAME=default
export OS_USER_DOMAIN_NAME=default
export OS_PROJECT_NAME=demo
export OS_USERNAME=demo
export OS_PASSWORD=DEMO_PASS_TENDCLOUD
export OS_AUTH_URL=http://controller:5000/v3
export OS_IDENTITY_API_VERSION=3
export OS_IMAGE_API_VERSION=2
eof











mysql -u root -pMYSQL_ROOT_PASS_TENDCLOUD
CREATE DATABASE glance;
GRANT ALL PRIVILEGES ON glance.* TO 'glance'@'localhost' \
IDENTIFIED BY 'GLANCE_DBPASS_TENDCLOUD';
GRANT ALL PRIVILEGES ON glance.* TO 'glance'@'%' \
IDENTIFIED BY 'GLANCE_DBPASS_TENDCLOUD';
exit

source /etc/tenant/admin-openrc.sh

openstack user create --domain default --password-prompt glance

GLANCE_PASS_TENDCLOUD


openstack role add --project service --user glance admin

openstack service create --name glance \
--description "OpenStack Image" image


openstack endpoint create --region RegionOne \
image public http://controller:9292

openstack endpoint create --region RegionOne \
image internal http://controller:9292

openstack endpoint create --region RegionOne \
image admin http://controller:9292



yum install -y openstack-glance

openstack-config --set /etc/glance/glance-api.conf database \
connection mysql+pymysql://glance:GLANCE_DBPASS_TENDCLOUD@controller/glance

openstack-config --set /etc/glance/glance-api.conf keystone_authtoken \
auth_uri http://controller:5000
openstack-config --set /etc/glance/glance-api.conf keystone_authtoken \
auth_url http://controller:35357
openstack-config --set /etc/glance/glance-api.conf keystone_authtoken \
memcached_servers controller:11211
openstack-config --set /etc/glance/glance-api.conf keystone_authtoken \
auth_type password
openstack-config --set /etc/glance/glance-api.conf keystone_authtoken \
project_domain_name default
openstack-config --set /etc/glance/glance-api.conf keystone_authtoken \
user_domain_name default
openstack-config --set /etc/glance/glance-api.conf keystone_authtoken \
project_name service
openstack-config --set /etc/glance/glance-api.conf keystone_authtoken \
username glance
openstack-config --set /etc/glance/glance-api.conf keystone_authtoken \
password GLANCE_PASS_TENDCLOUD
openstack-config --set /etc/glance/glance-api.conf paste_deploy \
flavor keystone

openstack-config --set /etc/glance/glance-api.conf glance_store \
stores file,http
openstack-config --set /etc/glance/glance-api.conf glance_store \
default_store file
openstack-config --set /etc/glance/glance-api.conf glance_store \
filesystem_store_datadir /var/lib/glance/images/


openstack-config --set /etc/glance/glance-registry.conf database \
connection mysql+pymysql://glance:GLANCE_DBPASS_TENDCLOUD@controller/glance

openstack-config --set /etc/glance/glance-registry.conf keystone_authtoken \
auth_uri http://controller:5000
openstack-config --set /etc/glance/glance-registry.conf keystone_authtoken \
auth_url http://controller:35357
openstack-config --set /etc/glance/glance-registry.conf keystone_authtoken \
memcached_servers controller:11211
openstack-config --set /etc/glance/glance-registry.conf keystone_authtoken \
auth_type password
openstack-config --set /etc/glance/glance-registry.conf keystone_authtoken \
project_domain_name default
openstack-config --set /etc/glance/glance-registry.conf keystone_authtoken \
user_domain_name default
openstack-config --set /etc/glance/glance-registry.conf keystone_authtoken \
project_name service
openstack-config --set /etc/glance/glance-registry.conf keystone_authtoken \
username glance
openstack-config --set /etc/glance/glance-registry.conf keystone_authtoken \
password GLANCE_PASS_TENDCLOUD
openstack-config --set /etc/glance/glance-registry.conf paste_deploy \
flavor keystone


su -s /bin/sh -c "glance-manage db_sync" glance

systemctl enable openstack-glance-api.service openstack-glance-registry.service
systemctl start openstack-glance-api.service openstack-glance-registry.service


source /etc/tenant/admin-openrc.sh

wget http://download.cirros-cloud.net/0.3.4/cirros-0.3.4-x86_64-disk.img

openstack image create "CirrOS-0.3.4-x86_64" \
--file cirros-0.3.4-x86_64-disk.img \
--disk-format qcow2 --container-format bare --public


openstack image list













openstack-config --set /etc/glance/glance-api.conf DEFAULT \
notification_driver noop

openstack-config --set /etc/glance/glance-api.conf DEFAULT \
verbose True


openstack-config --set /etc/glance/glance-registry.conf database \
connection mysql://glance:GLANCE_DBPASS_TENDCLOUD@controller/glance

openstack-config --set /etc/glance/glance-registry.conf keystone_authtoken \
auth_uri http://controller:5000/v2.0
openstack-config --set /etc/glance/glance-registry.conf keystone_authtoken \
identity_uri http://controller:35357
openstack-config --set /etc/glance/glance-registry.conf keystone_authtoken \
admin_tenant_name service
openstack-config --set /etc/glance/glance-registry.conf keystone_authtoken \
admin_user glance
openstack-config --set /etc/glance/glance-registry.conf keystone_authtoken \
admin_password GLANCE_PASS_TENDCLOUD
openstack-config --set /etc/glance/glance-registry.conf paste_deploy \
flavor keystone

openstack-config --set /etc/glance/glance-registry.conf DEFAULT \
notification_driver noop

openstack-config --set /etc/glance/glance-registry.conf DEFAULT \
verbose True


su -s /bin/sh -c "glance-manage db_sync" glance











source /etc/tenant/admin-openrc.sh

glance image-create --name "CirrOS-0.3.2-x86_64" --disk-format qcow2 \
--container-format bare --is-public True \
--copy-from http://115.182.99.130/o/cirros-0.3.2-x86_64-disk.img

glance image-list





glance image-create --name "CentOS-6.3-x86_64-Mini" --disk-format raw \
--container-format bare --is-public True \
--copy-from http://10.10.33.10/o/os/images/OriginalImages/CentOS-6.3-x86_64-Mini.qcow2


glance image-create --name "CentOS-6.5-x86_64-Mini" --disk-format raw \
--container-format bare --is-public True \
--copy-from http://10.10.33.10/o/os/images/OriginalImages/CentOS-6.5-x86_64-Mini.qcow2


glance image-create --name "CentOS-6.6-x86_64-Mini" --disk-format raw \
--container-format bare --is-public True \
--copy-from http://10.10.33.10/o/CentOS-6.6-x86_64-Mini.qcow2


glance image-create --name "CentOS-6.6-x86_64-Mini" --disk-format qcow2 \
--container-format bare --is-public True \
< /root/CentOS-6.6-x86_64-Mini.qcow2





glance image-create --name "Windows2012R2" --disk-format raw \
--container-format bare --is-public True \
--copy-from http://10.10.33.10/o/os/images/OriginalImages/Windows2012R2.qcow2


glance image-create --name "Windows2008X64SP2" --disk-format raw \
--container-format bare \
--copy-from http://10.10.33.10/o/os/images/Windows2008X64SP2.qcow2


glance image-create --name "Ubuntu-14.04-Server" --disk-format raw \
--container-format bare --is-public True \
--copy-from http://10.10.33.10/o/os/images/o/EasyStack/ubuntu-14.04-server.qcow2.img


glance image-create --name "Windows7Ux64SP1" --disk-format raw \
--container-format bare \
--copy-from http://10.10.33.10/o/os/images/Windows7Ux64SP1.qcow2



glance image-create --name "Windows7Ux86SP1" --disk-format qcow2 \
--container-format bare --is-public True \
< /root/Windows7Ux86SP1.qcow2



glance image-create --name "CentOS-6.3-x86_64-qgld-lvm" --disk-format qcow2 \
--container-format bare --is-public True \
< /root/CentOS-6.3-x86_64-qgld_lvm.qcow2




glance image-create --name "C65t-SnapShort-Templates" --disk-format raw \
--container-format bare </root/C65t-SnapShort-Templates.raw


