


openssl rand -hex 10


cat /etc/network/interfaces

auto lo
iface lo inet loopback

# The primary network interface
auto eth0
iface eth0 inet static
	address 10.0.0.31
	netmask 255.255.0.0
	network 10.0.0.0
	broadcast 10.0.255.255
	gateway 10.0.0.1
	dns-nameservers 202.106.0.20
	dns-nameservers 114.114.114.114
	dns-nameservers 8.8.8.8

# The provider network interface
	auto eth1
	iface eth1 inet manual
	up ip link set dev $IFACE up
	down ip link set dev $IFACE down





cat > /etc/hosts <<eof
127.0.0.1    localhost
# controller
10.0.0.11    controller
# compute1
10.0.0.31    compute1
eof




ping -c 4 openstack.org

ping -c 4 compute1

ping -c 4 controller








sudo apt-get update -y

apt-get install -y chrony


vim /etc/chrony/chrony.conf

server controller iburst



controller节点

sed -i '/ 3.debian.pool.ntp.org /a\
server controller iburst' /etc/chrony/chrony.conf

非controller节点
sed -i '/ 3.debian.pool.ntp.org /a\
server controller iburst' /etc/chrony/chrony.conf
sed -i '/.debian.pool.ntp.org/d' /etc/chrony/chrony.conf

所有节点

chronyc sources


service chrony restart







apt-get install software-properties-common -y
add-apt-repository cloud-archive:mitaka

apt-get update -y && apt-get dist-upgrade -y

apt-get install python-openstackclient






apt-get install mariadb-server python-pymysql


vim /etc/mysql/conf.d/openstack.cnf

[mysqld]
bind-address = 10.0.0.11
default-storage-engine = innodb
innodb_file_per_table
max_connections = 4096
collation-server = utf8_general_ci
character-set-server = utf8

service mysql restart

mysql_secure_installation







apt-get install mongodb-server mongodb-clients python-pymongo

vim /etc/mongodb.conf

bind_ip = 0.0.0.0
smallfiles = true



service mongodb stop
rm -rf /var/lib/mongodb/journal/prealloc.*
service mongodb start





apt-get install rabbitmq-server


rabbitmqctl add_user openstack RABBIT_PASS

rabbitmqctl set_permissions openstack ".*" ".*" ".*"





apt-get install memcached python-memcache

vi /etc/memcached.conf

-l 0.0.0.0

service memcached restart





mysql -u root -proot

CREATE DATABASE keystone;

GRANT ALL PRIVILEGES ON keystone.* TO 'keystone'@'localhost' \
  IDENTIFIED BY 'KEYSTONE_DBPASS';
GRANT ALL PRIVILEGES ON keystone.* TO 'keystone'@'%' \
  IDENTIFIED BY 'KEYSTONE_DBPASS';


root@controller:~# openssl rand -hex 10
84dc44b996c0c19f6e77


echo "manual" > /etc/init/keystone.override



apt-get install keystone apache2 libapache2-mod-wsgi -y


vi /etc/keystone/keystone.conf

[DEFAULT]
...
admin_token = ADMIN_TOKEN

[database]
...
connection = mysql+pymysql://keystone:KEYSTONE_DBPASS@controller/keystone

[token]
...
provider = fernet


su -s /bin/sh -c "keystone-manage db_sync" keystone



keystone-manage fernet_setup --keystone-user keystone --keystone-group keystone


vi /etc/apache2/apache2.conf

ServerName controller


vi /etc/apache2/sites-available/wsgi-keystone.conf
i

Listen 5000
Listen 35357

<VirtualHost *:5000>
    WSGIDaemonProcess keystone-public processes=5 threads=1 user=keystone group=keystone display-name=%{GROUP}
    WSGIProcessGroup keystone-public
    WSGIScriptAlias / /usr/bin/keystone-wsgi-public
    WSGIApplicationGroup %{GLOBAL}
    WSGIPassAuthorization On
    ErrorLogFormat "%{cu}t %M"
    ErrorLog /var/log/apache2/keystone.log
    CustomLog /var/log/apache2/keystone_access.log combined

    <Directory /usr/bin>
        Require all granted
    </Directory>
</VirtualHost>

<VirtualHost *:35357>
    WSGIDaemonProcess keystone-admin processes=5 threads=1 user=keystone group=keystone display-name=%{GROUP}
    WSGIProcessGroup keystone-admin
    WSGIScriptAlias / /usr/bin/keystone-wsgi-admin
    WSGIApplicationGroup %{GLOBAL}
    WSGIPassAuthorization On
    ErrorLogFormat "%{cu}t %M"
    ErrorLog /var/log/apache2/keystone.log
    CustomLog /var/log/apache2/keystone_access.log combined

    <Directory /usr/bin>
        Require all granted
    </Directory>
</VirtualHost>


ln -s /etc/apache2/sites-available/wsgi-keystone.conf /etc/apache2/sites-enabled


service apache2 restart


rm -f /var/lib/keystone/keystone.db



export OS_TOKEN=ADMIN_TOKEN

export OS_URL=http://controller:35357/v3

export OS_IDENTITY_API_VERSION=3






openstack service create \
--name keystone --description "OpenStack Identity" identity

openstack endpoint create --region RegionOne \
identity public http://controller:5000/v3

openstack endpoint create --region RegionOne \
identity internal http://controller:5000/v3

openstack endpoint create --region RegionOne \
identity admin http://controller:35357/v3






openstack domain create --description "Default Domain" default

openstack project create --domain default \
--description "Admin Project" admin


openstack user create --domain default \
  --password ADMIN_PASS admin


openstack role create admin

openstack role add --project admin --user admin admin





openstack project create --domain default \
  --description "Service Project" service

openstack project create --domain default \
  --description "Demo Project" demo

openstack user create --domain default \
  --password DEMO_PASS demo

openstack role create user

openstack role add --project demo --user demo user





vi /etc/keystone/keystone-paste.ini file
remove 
admin_token_auth from the 
[pipeline:public_api], 
[pipeline:admin_api], and 
[pipeline:api_v3] sections.
ll

unset OS_TOKEN OS_URL


openstack --os-auth-url http://controller:35357/v3 \
--os-project-domain-name default --os-user-domain-name default \
--os-project-name admin --os-username admin token issue


openstack --os-auth-url http://controller:5000/v3 \
--os-project-domain-name default --os-user-domain-name default \
--os-project-name demo --os-username demo token issue




vi admin-openrc
i

export OS_PROJECT_DOMAIN_NAME=default
export OS_USER_DOMAIN_NAME=default
export OS_PROJECT_NAME=admin
export OS_USERNAME=admin
export OS_PASSWORD=ADMIN_PASS
export OS_AUTH_URL=http://controller:35357/v3
export OS_IDENTITY_API_VERSION=3
export OS_IMAGE_API_VERSION=2



vi demo-openrc
i

export OS_PROJECT_DOMAIN_NAME=default
export OS_USER_DOMAIN_NAME=default
export OS_PROJECT_NAME=demo
export OS_USERNAME=demo
export OS_PASSWORD=DEMO_PASS
export OS_AUTH_URL=http://controller:5000/v3
export OS_IDENTITY_API_VERSION=3
export OS_IMAGE_API_VERSION=2


. admin-openrc


. admin-openrc
root@controller:~# openstack user password set --password ADMIN_PASS


. demo-openrc
openstack user password set --password DEMO_PASS --original-password demo








mysql -u root -proot

CREATE DATABASE glance;

GRANT ALL PRIVILEGES ON glance.* TO 'glance'@'localhost' \
  IDENTIFIED BY 'GLANCE_DBPASS';
GRANT ALL PRIVILEGES ON glance.* TO 'glance'@'%' \
  IDENTIFIED BY 'GLANCE_DBPASS';

. admin-openrc

openstack user create --domain default --password GLANCE_PASS glance


openstack role add --project service --user glance admin




openstack service create --name glance \
  --description "OpenStack Image" image


openstack endpoint create --region RegionOne \
  image public http://controller:9292


openstack endpoint create --region RegionOne \
  image internal http://controller:9292


openstack endpoint create --region RegionOne \
  image admin http://controller:9292





apt-get install glance -y

vi /etc/glance/glance-api.conf


[database]
...
connection = mysql+pymysql://glance:GLANCE_DBPASS@controller/glance

[keystone_authtoken]
...
auth_uri = http://controller:5000
auth_url = http://controller:35357
memcached_servers = controller:11211
auth_type = password
project_domain_name = default
user_domain_name = default
project_name = service
username = glance
password = GLANCE_PASS

[paste_deploy]
...
flavor = keystone

[glance_store]

stores = file,http
default_store = file
filesystem_store_datadir = /var/lib/glance/images/



vim /etc/glance/glance-registry.conf

[database]
...
connection = mysql+pymysql://glance:GLANCE_DBPASS@controller/glance

[keystone_authtoken]
...
auth_uri = http://controller:5000
auth_url = http://controller:35357
memcached_servers = controller:11211
auth_type = password
project_domain_name = default
user_domain_name = default
project_name = service
username = glance
password = GLANCE_PASS

[paste_deploy]
...
flavor = keystone



su -s /bin/sh -c "glance-manage db_sync" glance

service glance-registry restart
service glance-api restart






. admin-openrc

wget http://download.cirros-cloud.net/0.3.4/cirros-0.3.4-x86_64-disk.img



openstack image create "CirrOS-0.3.4-x86_64" \
  --file cirros-0.3.4-x86_64-disk.img \
  --disk-format qcow2 --container-format bare \
  --public


openstack image list






mysql -u root -proot

CREATE DATABASE nova_api;
CREATE DATABASE nova;

GRANT ALL PRIVILEGES ON nova_api.* TO 'nova'@'localhost' \
  IDENTIFIED BY 'NOVA_DBPASS';
GRANT ALL PRIVILEGES ON nova_api.* TO 'nova'@'%' \
  IDENTIFIED BY 'NOVA_DBPASS';
GRANT ALL PRIVILEGES ON nova.* TO 'nova'@'localhost' \
  IDENTIFIED BY 'NOVA_DBPASS';
GRANT ALL PRIVILEGES ON nova.* TO 'nova'@'%' \
  IDENTIFIED BY 'NOVA_DBPASS';


. admin-openrc


openstack user create --domain default \
  --password NOVA_PASS nova

openstack role add --project service --user nova admin

openstack service create --name nova \
  --description "OpenStack Compute" compute




openstack endpoint create --region RegionOne \
  compute public http://controller:8774/v2.1/%\(tenant_id\)s

openstack endpoint create --region RegionOne \
  compute internal http://controller:8774/v2.1/%\(tenant_id\)s

openstack endpoint create --region RegionOne \
  compute admin http://controller:8774/v2.1/%\(tenant_id\)s


apt-get install nova-api nova-conductor nova-consoleauth \
  nova-novncproxy nova-scheduler -y







vi /etc/nova/nova.conf

[DEFAULT]

enabled_apis = osapi_compute,metadata
rpc_backend = rabbit
auth_strategy = keystone
my_ip = 10.0.0.11
use_neutron = True
firewall_driver = nova.virt.firewall.NoopFirewallDriver



[api_database]
connection = mysql+pymysql://nova:NOVA_DBPASS@controller/nova_api

[database]
connection = mysql+pymysql://nova:NOVA_DBPASS@controller/nova


[oslo_messaging_rabbit]

rabbit_host = controller
rabbit_userid = openstack
rabbit_password = RABBIT_PASS

[keystone_authtoken]

auth_uri = http://controller:5000
auth_url = http://controller:35357
memcached_servers = controller:11211
auth_type = password
project_domain_name = default
user_domain_name = default
project_name = service
username = nova
password = NOVA_PASS

[vnc]
vncserver_listen = 10.0.0.11
vncserver_proxyclient_address = 10.0.0.11

[glance]
api_servers = http://controller:9292

[oslo_concurrency]
lock_path = /var/lib/nova/tmp


su -s /bin/sh -c "nova-manage api_db sync" nova
su -s /bin/sh -c "nova-manage db sync" nova


service nova-api restart
service nova-consoleauth restart
service nova-scheduler restart
service nova-conductor restart
service nova-novncproxy restart








apt-get install nova-compute -y

vi /etc/nova/nova.conf
i

[DEFAULT]
rpc_backend = rabbit
my_ip = 10.0.0.31
use_neutron = True
firewall_driver = nova.virt.firewall.NoopFirewallDriver
auth_strategy = keystone

[oslo_messaging_rabbit]
rabbit_host = controller
rabbit_userid = openstack
rabbit_password = RABBIT_PASS

[keystone_authtoken]
auth_uri = http://controller:5000
auth_url = http://controller:35357
memcached_servers = controller:11211
auth_type = password
project_domain_name = default
user_domain_name = default
project_name = service
username = nova
password = NOVA_PASS

[vnc]
enabled = True
vncserver_listen = 0.0.0.0
vncserver_proxyclient_address = 10.0.0.31
novncproxy_base_url = http://controller:6080/vnc_auto.html

[glance]
api_servers = http://controller:9292

[oslo_concurrency]
lock_path = /var/lib/nova/tmp


vi /etc/nova/nova-compute.conf

[libvirt]
virt_type = qemu


service nova-compute restart




. admin-openrc

openstack compute service list










mysql -u root -p


CREATE DATABASE neutron;
GRANT ALL PRIVILEGES ON neutron.* TO 'neutron'@'localhost' \
  IDENTIFIED BY 'NEUTRON_DBPASS';
GRANT ALL PRIVILEGES ON neutron.* TO 'neutron'@'%' \
  IDENTIFIED BY 'NEUTRON_DBPASS';

. admin-openrc

openstack user create --domain default --password NEUTRON_PASS neutron

openstack role add --project service --user neutron admin




openstack service create --name neutron \
  --description "OpenStack Networking" network

openstack endpoint create --region RegionOne \
  network public http://controller:9696

openstack endpoint create --region RegionOne \
  network internal http://controller:9696

openstack endpoint create --region RegionOne \
  network admin http://controller:9696



网络选项2

apt-get install neutron-server neutron-plugin-ml2 \
  neutron-linuxbridge-agent neutron-l3-agent neutron-dhcp-agent \
  neutron-metadata-agent

vi /etc/neutron/neutron.conf

[database]
...
connection = mysql+pymysql://neutron:NEUTRON_DBPASS@controller/neutron 


[DEFAULT]
...
core_plugin = ml2
service_plugins = router
allow_overlapping_ips = True
rpc_backend = rabbit
auth_strategy = keystone
notify_nova_on_port_status_changes = True
notify_nova_on_port_data_changes = True



[oslo_messaging_rabbit]
...
rabbit_host = controller
rabbit_userid = openstack
rabbit_password = RABBIT_PASS


[keystone_authtoken]
...
auth_uri = http://controller:5000
auth_url = http://controller:35357
memcached_servers = controller:11211
auth_type = password
project_domain_name = default
user_domain_name = default
project_name = service
username = neutron
password = NEUTRON_PASS


[nova]
...
auth_url = http://controller:35357
auth_type = password
project_domain_name = default
user_domain_name = default
region_name = RegionOne
project_name = service
username = nova
password = NOVA_PASS




vim /etc/neutron/plugins/ml2/ml2_conf.ini

[ml2]
...
type_drivers = flat,vlan,vxlan
tenant_network_types = vxlan
mechanism_drivers = linuxbridge,l2population
extension_drivers = port_security

[ml2_type_flat]
...
flat_networks = provider

[ml2_type_vxlan]
...
vni_ranges = 1:1000

[securitygroup]
...
enable_ipset = True



vi /etc/neutron/plugins/ml2/linuxbridge_agent.ini


[linux_bridge]
physical_interface_mappings = provider:eth1

[vxlan]
enable_vxlan = True
local_ip = 10.0.0.11
l2_population = True

[securitygroup]
...
enable_security_group = True
firewall_driver = neutron.agent.linux.iptables_firewall.IptablesFirewallDriver



vi /etc/neutron/l3_agent.ini

[DEFAULT]
...
interface_driver = neutron.agent.linux.interface.BridgeInterfaceDriver
external_network_bridge =





























openstack image create "CentOS-6.5-x86_64-Mini" \
--file /root/centos6.5_x86_64.raw \
--disk-format raw --container-format bare --public


openstack image list







openstack server create --flavor m1.large --image CentOS-6.5-x86_64-Mini \
--nic net-id=0a31ed60-dad5-4f4c-9c4b-385f4b8be1ff --security-group default \
--admin-pass 12345678Cm instance

--user-data





nova boot --flavor m1.large --image CentOS-6.5-x86_64-Mini \
--nic net-id=0a31ed60-dad5-4f4c-9c4b-385f4b8be1ff --security-group default \
--admin-pass 12345678Cm instance





http://kiwik.github.io/openstack/2016/01/30/%E8%AE%BE%E7%BD%AE%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%AF%86%E7%A0%81/







